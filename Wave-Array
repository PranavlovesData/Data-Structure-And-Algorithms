In following code we are making a wave pattern with the values of a sorted array.
ie: suppose an array a=[1,2,3,4,5]
resultant array must be a=[2,1,4,3,5]
Hence creating a ripple with \. /' \. /'  in values of array. 
Its a simple concept all we need to do is run array till the n-1 length to avoid out of range error
then we compare postion of indices to check if they are even 
in case they are we interchange there value with next element if next element is greater than our value
hence creating a wave like structure.

from typing import List


class Solution:
    def convertToWave(self, n: int, a: List[int]) -> None:
        for i in range(n - 1):
            if i % 2 == 0:
                if a[i] < a[i + 1]:
                    a[i], a[i + 1] = a[i + 1], a[i]
        return a


# {
# Driver Code Starts
class IntArray:
    def __init__(self) -> None:
        pass

    def Input(self, n):
        arr = [int(i) for i in input().strip().split()]  # array input
        return arr

    def Print(self, arr):
        for i in arr:
            print(i, end=" ")
        print()


if __name__ == "__main__":
    t = int(input())
    for _ in range(t):
        n = int(input())

        a = IntArray().Input(n)

        obj = Solution()
        obj.convertToWave(n, a)
        IntArray().Print(a)

# } Driver Code Ends
