Bubble Sort: This is a simple sorting algorithm. which compare two adjacent element in a unsorted array and interchange them in right order.
------------ Its also called SINKING SORT because heavy element sinks and lighter rises like bubble.
Time Complexity: O(n2) in worst case and O(n) in average case.
---------------
We begin by getting the length of the array 
In a loop with iterate till the length of array, In other one we iterate from 0 to n-i-1. (Can also run till n-1 for simplicity).
Hence with every iteration the loop gets shorter.
Then we check if Array[j] > Array[j+1], if applied we interchange the value and keep iterating till n-i-1.
atlast we return the array with sorted values.

Example:
----------
class Solution:
    #Function to sort the array using bubble sort algorithm.
    def bubbleSort(self,arr, n):
       # Code here
      for i in range(n):
        for j in range(0,n-i-1):
            if arr[j]>arr[j+1]:
                arr[j],arr[j+1]=arr[j+1],arr[j]
       return arr
          
                        

#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__=='__main__':
    t = int(input())
    for i in range(t):
        n = int(input())
        arr = list(map(int, input().strip().split()))
        ob = Solution()
        ob.bubbleSort(arr, n)
        for i in arr:
            print(i,end=' ')
        print()

# } Driver Code Ends


# looping iteration:
---------------------
a[j] >=< a[j+1]
# i=0   4,1,3,9,7
4 > 1 = 1,4,3,9,7
4 > 3 = 1,3,4,9,7
4 < 9 = 1,3,4,9,7  # 4 is replaced by 9
9 > 7 = 1,3,4,7,9  # highest in last
#i=1
1 < 3 = 1,3,4,7,9
3 < 4 = 1,3,4,7,9
4 < 7 = 1,3,4,7,9
#i=2
1 < 3 = 1,3,4,7,9
3 < 4 = 1,3,4,7,9
#i=3
1 < 3 = 1,3,4,7,9
