Given an array arr of distinct elements of size N, the task is to rearrange the elements of the array in a zig-zag fashion 
so that the converted array should be in the below form: 

arr[0] < arr[1]  > arr[2] < arr[3] > arr[4] < . . . . arr[n-2] < arr[n-1] > arr[n]. 

NOTE: If your transformation is correct, the output will be 1 else the output will be 0. 
EXAMPLE:
Input:
N = 7
Arr[] = {4, 3, 7, 8, 6, 2, 1}
Output: 3 7 4 8 2 6 1
Explanation: 3 < 7 > 4 < 8 > 2 < 6 > 1

Approach 1:
There are two approaches to this problem :
* Sort the array.
* Traverse the array from index 1 to N-1, and increase the value of index by 2.
* While traversing the array swap arr[i] with arr[i+1].


class Solution:
    def zigZag(self,arr,n):
        arr.sort()
        for i in range(1,n-1,2):
          arr[i],arr[i+1]=arr[i+1],arr[i]
        return arr

###########################################################3

Approach 2: In this approach, rather than sorting the complete array, 
---------   we will maintain a flag for representing which order(i.e.,< or >) we currently need. 
            If the current two elements are not in that order, then swap those elements, otherwise not.

class Solution:
    # Program for zig-zag conversion of array
    def zigZag(self, arr, n):
                                              # We will use a flag to alternate between true and false
      flag=True
      for i in range(n-1):              
        if flag is True:                      # when flag is true we check if arr[current] > arr[next]   just like example ie 4>3 
          if arr[i] > arr[i+1]:
            arr[i],arr[i+1]=arr[i+1],arr[i]
         else:                                # when flag is false we check if arr[current] < arr[next] just like example ie 4<7 
            if arr[i] < arr[i+1]:
               arr[i],arr[i+1]=arr[i+1],arr[i]
         flag=bool(1-flag)                    # we switch value of flag alternatively between True and False
      
      
      # return arr 
      /////////////////
      
Output: 4 3 7 8 6 2 1
-------[4, 3, 7, 8, 6, 2, 1]
arr[i]: 4 and arr[i+1]: 3  (Switch)
Flag: False
[3, 4, 7, 8, 6, 2, 1]
arr[i]: 4 and arr[i+1]: 7  (Switch)
Flag: True
[3, 7, 4, 8, 6, 2, 1]
arr[i]: 4 and arr[i+1]: 8  (no switch)
Flag: False
[3, 7, 4, 8, 6, 2, 1]
arr[i]: 8 and arr[i+1]: 6  (no switch)
Flag: True
[3, 7, 4, 8, 6, 2, 1]
arr[i]: 6 and arr[i+1]: 2  (switch)
Flag: False
[3, 7, 4, 8, 2, 6, 1]
arr[i]: 6 and arr[i+1]: 1  (no switch)
Flag: True
1

#{ 
 # Driver Code Starts
#Initial Template for Python 3

import sys


def isZigzag(arr, n):
    f = 1

    for i in range(1, n):
        if f:
            if arr[i-1] > arr[i]:
                return 0
        else:
            if arr[i-1] < arr[i]:
                return 0
        f = f ^ 1

    return 1

t = int(input())
while t:
    n = int(input())
    arr = [int(x) for x in input().split()]
    ob = Solution()
    ob.zigZag(arr, n)
    check = isZigzag(arr, n)

    if check:
        print("1")
    else:
        print("0")

    t -= 1

sys.exit(0)

# } Driver Code Ends
